{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaarias/Documents/the-app/frontend/src/context/ForumContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForumContext = /*#__PURE__*/createContext();\nexport const ForumProvider = ({\n  children\n}) => {\n  _s();\n  const [threads, setThreads] = useState([]);\n  const [currentThread, setCurrentThread] = useState(null);\n  const fetchThreads = async () => {\n    const response = await fetch('http://localhost:5001/api/threads');\n    const data = await response.json();\n    setThreads(data);\n  };\n  const fetchThread = async id => {\n    const response = await fetch(`http://localhost:5001/api/threads/${id}`);\n    const data = await response.json();\n    setCurrentThread(data);\n  };\n  const createThread = async (title, content) => {\n    const response = await fetch('http://localhost:5001/api/threads', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        content\n      })\n    });\n    const data = await response.json();\n    fetchThreads();\n    return data;\n  };\n  const createReply = async (threadId, content) => {\n    const response = await fetch(`http://localhost:5001/api/threads/${threadId}/replies`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        content\n      })\n    });\n    const data = await response.json();\n    fetchThread(threadId);\n    return data;\n  };\n  useEffect(() => {\n    fetchThreads();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ForumContext.Provider, {\n    value: {\n      threads,\n      currentThread,\n      fetchThreads,\n      fetchThread,\n      createThread,\n      createReply\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ForumProvider, \"vdPn857mSFKq2cKvFk0HXxDs44k=\");\n_c = ForumProvider;\nexport const useForum = () => {\n  _s2();\n  return useContext(ForumContext);\n};\n_s2(useForum, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ForumProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","ForumContext","ForumProvider","children","_s","threads","setThreads","currentThread","setCurrentThread","fetchThreads","response","fetch","data","json","fetchThread","id","createThread","title","content","method","headers","body","JSON","stringify","createReply","threadId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useForum","_s2","$RefreshReg$"],"sources":["/Users/joshuaarias/Documents/the-app/frontend/src/context/ForumContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst ForumContext = createContext();\n\nexport const ForumProvider = ({ children }) => {\n  const [threads, setThreads] = useState([]);\n  const [currentThread, setCurrentThread] = useState(null);\n\n  const fetchThreads = async () => {\n    const response = await fetch('http://localhost:5001/api/threads');\n    const data = await response.json();\n    setThreads(data);\n  };\n\n  const fetchThread = async (id) => {\n    const response = await fetch(`http://localhost:5001/api/threads/${id}`);\n    const data = await response.json();\n    setCurrentThread(data);\n  };\n\n  const createThread = async (title, content) => {\n    const response = await fetch('http://localhost:5001/api/threads', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ title, content }),\n    });\n    const data = await response.json();\n    fetchThreads();\n    return data;\n  };\n\n  const createReply = async (threadId, content) => {\n    const response = await fetch(`http://localhost:5001/api/threads/${threadId}/replies`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ content }),\n    });\n    const data = await response.json();\n    fetchThread(threadId);\n    return data;\n  };\n\n  useEffect(() => {\n    fetchThreads();\n  }, []);\n\n  return (\n    <ForumContext.Provider\n      value={{\n        threads,\n        currentThread,\n        fetchThreads,\n        fetchThread,\n        createThread,\n        createReply,\n      }}\n    >\n      {children}\n    </ForumContext.Provider>\n  );\n};\n\nexport const useForum = () => useContext(ForumContext); "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;IACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCP,UAAU,CAACM,IAAI,CAAC;EAClB,CAAC;EAED,MAAME,WAAW,GAAG,MAAOC,EAAE,IAAK;IAChC,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCI,EAAE,EAAE,CAAC;IACvE,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,gBAAgB,CAACI,IAAI,CAAC;EACxB,CAAC;EAED,MAAMI,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,OAAO,KAAK;IAC7C,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,KAAK;QAAEC;MAAQ,CAAC;IACzC,CAAC,CAAC;IACF,MAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCJ,YAAY,CAAC,CAAC;IACd,OAAOG,IAAI;EACb,CAAC;EAED,MAAMY,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEP,OAAO,KAAK;IAC/C,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCc,QAAQ,UAAU,EAAE;MACpFN,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL;MAAQ,CAAC;IAClC,CAAC,CAAC;IACF,MAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCC,WAAW,CAACW,QAAQ,CAAC;IACrB,OAAOb,IAAI;EACb,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACC,YAAY,CAACyB,QAAQ;IACpBC,KAAK,EAAE;MACLtB,OAAO;MACPE,aAAa;MACbE,YAAY;MACZK,WAAW;MACXE,YAAY;MACZQ;IACF,CAAE;IAAArB,QAAA,EAEDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC3B,EAAA,CA5DWF,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AA8D1B,OAAO,MAAM+B,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACI,YAAY,CAAC;AAAA;AAACiC,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}